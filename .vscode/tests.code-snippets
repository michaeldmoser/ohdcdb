{
    "imp:test:render": {
		"scope": "javascript",
		"prefix": "imp:test:render",
		"body": [
			"import { render } from 'testing/library';"
		],
		"description": "Import the test renderer"
	},
	"testFile": {
        "scope": "javascript",
        "prefix": "test:file:msw",
        "description": "Snipprt to create a new test file with MSW",
        "body": [
            "import React from 'react';",
            "import { rest } from 'msw';",
            "import { setupServer } from 'msw/node';",
            "import { render, screen } from 'testing/library';",
            "",
            "import ${2:Sut} from '${1:/sut/path}';",
            "",
            "describe('${3:Describe the block of tests}', () => {",
            "\tconst handlers = [",
            "\t\trest.get('/api/people/', (request, response, context) => {",
            "\t\t\treturn response(",
            "\t\t\t\tcontext.status(200),",
            "\t\t\t\tcontext.json(peopleList),",
            "\t\t\t\tcontext.delay(1)",
            "\t\t\t);",
            "\t\t}),",
            "\t];",
            "\t",
            "\tconst server = setupServer(...handlers);",
            "\t",
            "\tbeforeAll(() => { server.listen(); });",
            "\t",
            "\tafterEach(() => server.resetHandlers());",
            "\t",
            "\tafterAll(() => server.close());",
            "\t",
            "\tit('should ${4:do something interesting}', () => {",
            "\t\trender(<${2:Sut} />);",
            "\t\t${5:expect};",
            "\t});",
            "});",
        ]
    },
    "describe with MSW": {
        "scope": "javascript",
        "prefix": "describe:msw",
        "description": "Create a describe testing block that use's MSW",
        "body": [
            "describe('${1:Describe the block of tests}', () => {",
            "\tconst handlers = [",
            "\t\trest.${2|get,post,put,delete|}('${3:/the/api/path}', (request, response, context) => {",
            "\t\t\treturn response(",
            "\t\t\t\tcontext.status(200),",
            "\t\t\t\tcontext.json({})",
            "\t\t\t);",
            "\t\t}),",
            "\t];",
            "\t",
            "\tconst server = setupServer(...handlers);",
            "\t",
            "\tbeforeAll(() => { server.listen(); });",
            "\t",
            "\tafterEach(() => server.resetHandlers());",
            "\t",
            "\tafterAll(() => server.close());",
            "\t",
            "\tit('should ${4:do something interesting}', () => {",
            "\t\trender(<${5:Sut} />);",
            "\t\t${6:expect};",
            "\t});",
            "});",
        ]
    },
    "rest:handler": {
        "scope": "javascript",
        "prefix": "rest:handler",
        "description": "rest.(get|post|delete|put) handler for msw server",
        "body": [
            "rest.${1|get,post,put,delete|}('/api/${2:path}', (req, res, ctx) => {",
            "\t${0}",
            "\treturn res(ctx.json({});",
            "}),"
        ]
    }
}